{% liquid 
  assign pt = section.settings.pt | prepend: 'pt-'
  assign pb = section.settings.pb | prepend: 'pb-'
  assign mt = section.settings.mt | prepend: 'mt-'
  assign mb = section.settings.mb | prepend: 'mb-'
%}

<section id="video-hero-{{ section.id }}" class="video-hero {{ section.settings.bg_color }} {{ pt }} {{ pb }} {{ mt }} {{ mb }}">
  <div class="video-hero-wrapper position-relative">
    <div class="video-container">
      {%- if section.settings.video_poster != blank -%}
        <img
          class="video-poster"
          src="{{ section.settings.video_poster | image_url: width: 1600, format: 'webp' }}"
          srcset="
            {{ section.settings.video_poster | image_url: width: 640,  format: 'webp' }} 640w,
            {{ section.settings.video_poster | image_url: width: 960,  format: 'webp' }} 960w,
            {{ section.settings.video_poster | image_url: width: 1280, format: 'webp' }} 1280w,
            {{ section.settings.video_poster | image_url: width: 1600, format: 'webp' }} 1600w
          "
          sizes="100vw"
          alt="{{ section.settings.heading | default: shop.name | escape }}"
          width="1600"
          height="{{ 1600 | divided_by: section.settings.video_poster.aspect_ratio | round }}"
          loading="eager"
          fetchpriority="high"
          decoding="async"
          data-lcp
        >
      {%- endif -%}

      {%- if section.settings.video_hosted != blank -%}
        <video
          class="video-hero-video"
          autoplay muted loop playsinline
          preload="metadata"
          {% if section.settings.video_poster %}poster="{{ section.settings.video_poster | image_url: width: 1200 }}"{% endif %}>
          <source src="{{ section.settings.video_hosted }}" type="video/mp4">
          Sorry, your browser doesn't support embedded videos.
        </video>
      {%- endif -%}

      {%- if section.settings.video_url != blank -%}
        {% if section.settings.video_url contains 'youtube' %}
          {% assign yt = section.settings.video_url | split: 'v=' | last | split: '&' | first %}
          <iframe
            class="video-hero-iframe"
            title="{{ section.settings.heading | default: 'YouTube video' }}"
            loading="lazy"
            frameborder="0"
            allow="autoplay; encrypted-media; fullscreen; picture-in-picture"
            allowfullscreen
            data-defer-src="https://www.youtube-nocookie.com/embed/{{ yt }}?autoplay=1&mute=1&loop=1&playlist={{ yt }}&controls=0&rel=0&modestbranding=1&playsinline=1">
          </iframe>
        {% elsif section.settings.video_url contains 'vimeo' %}
          {% assign vm = section.settings.video_url | split: '/' | last %}
          <iframe
            class="video-hero-iframe"
            title="{{ section.settings.heading | default: 'Vimeo video' }}"
            loading="lazy"
            frameborder="0"
            allow="autoplay; fullscreen; picture-in-picture"
            allowfullscreen
            data-defer-src="https://player.vimeo.com/video/{{ vm }}?autoplay=1&muted=1&loop=1&background=1&controls=0&playsinline=1">
          </iframe>
        {% endif %}
      {%- endif -%}
    </div>

    {% if section.settings.overlay_opacity > 0 %}
      <div class="video-overlay" style="background: rgba(0,0,0,{{ section.settings.overlay_opacity | divided_by: 100.0 }});"></div>
    {% endif %}

    <div class="video-content position-absolute w-100 h-100 d-flex align-items-center">
      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto text-center">
            {% unless section.settings.heading == blank %}
              <h1 class="video-hero-title {{ section.settings.heading_size }} {{ section.settings.text_color }} mb-4">
                {{ section.settings.heading }}
              </h1>
            {% endunless %}
            {% unless section.settings.subheading == blank %}
              <p class="video-hero-subtitle {{ section.settings.subheading_size }} {{ section.settings.text_color }} mb-5">
                {{ section.settings.subheading }}
              </p>
            {% endunless %}
            {% unless section.settings.button_text == blank %}
              <a href="{{ section.settings.button_link | default: '#' }}" class="btn {{ section.settings.button_style }} {{ section.settings.button_size }}">
                {{ section.settings.button_text }}
              </a>
            {% endunless %}
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Defer des iframes au premier scroll/clic
    document.addEventListener('DOMContentLoaded', function () {
      var root = document.getElementById('video-hero-{{ section.id }}');
      if (!root) return;

      var iframe = root.querySelector('iframe[data-defer-src]');
      var video  = root.querySelector('video.video-hero-video');
      var poster = root.querySelector('img.video-poster');

      function onPlayStart(){ root.classList.add('is-playing'); }

      if (video){
        video.addEventListener('playing', onPlayStart, { once:true });
        // fallback si l’event ne part pas
        setTimeout(function(){ if (!root.classList.contains('is-playing')) onPlayStart(); }, 1500);
      }

      if (iframe){
        var load = function(){
          if (iframe.dataset.loaded) return;
          iframe.src = iframe.getAttribute('data-defer-src');
          iframe.dataset.loaded = '1';
          onPlayStart();
        };
        var first = function(){ load(); cleanup(); };
        var cleanup = function(){
          window.removeEventListener('scroll', first, { passive:true });
          window.removeEventListener('click', first);
          window.removeEventListener('touchstart', first);
        };
        window.addEventListener('scroll', first, { once:true, passive:true });
        window.addEventListener('click', first, { once:true });
        window.addEventListener('touchstart', first, { once:true });
      }
    });
  </script>
</section>

<style>
  #video-hero-{{ section.id }}{ height: {{ section.settings.section_height }}vh; overflow:hidden; position:relative; }
  @media (max-width: 768px){ #video-hero-{{ section.id }}{ height: {{ section.settings.section_height_mobile }}vh; } }

  /* Anti-CLS : réserve le ratio du média */
  #video-hero-{{ section.id }} .video-container{ position:absolute; inset:0; z-index:1; aspect-ratio:16/9; }
  #video-hero-{{ section.id }} .video-hero-video,
  #video-hero-{{ section.id }} .video-hero-iframe,
  #video-hero-{{ section.id }} .video-poster{ position:absolute; inset:0; width:100%; height:100%; object-fit:cover; object-position:center; display:block; }

  /* Poster au-dessus tant que ça ne joue pas */
  #video-hero-{{ section.id }} .video-poster{ z-index:1; transition:opacity .4s ease; }
  #video-hero-{{ section.id }}.is-playing .video-poster{ opacity:0; pointer-events:none; }

  #video-hero-{{ section.id }} .video-hero-video,
  #video-hero-{{ section.id }} .video-hero-iframe{ z-index:0; background:#000; }

  #video-hero-{{ section.id }} .video-overlay{ position:absolute; inset:0; z-index:2; }
  #video-hero-{{ section.id }} .video-content{ z-index:3; }

  .video-hero-title{ animation: fadeInUp 1s ease-out; }
  .video-hero-subtitle{ animation: fadeInUp 1s ease-out .3s both; }
  .btn{ animation: fadeInUp 1s ease-out .6s both; }

  @keyframes fadeInUp{ from{opacity:0; transform:translateY(30px);} to{opacity:1; transform:translateY(0);} }
</style>

{% schema %}
{
  "name": "Video Hero",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading", "default": "Video Hero Section" },
    { "type": "select", "id": "heading_size", "label": "Heading Size",
      "options": [
        { "value": "h1", "label": "H1" }, { "value": "h2", "label": "H2" },
        { "value": "h3", "label": "H3" }, { "value": "display-1", "label": "Display 1" },
        { "value": "display-2", "label": "Display 2" }], "default": "display-1" },
    { "type": "textarea", "id": "subheading", "label": "Subheading",
      "default": "Create an immersive experience with video backgrounds" },
    { "type": "select", "id": "subheading_size", "label": "Subheading Size",
      "options": [
        { "value": "fs-6", "label": "Small" }, { "value": "fs-5", "label": "Medium" },
        { "value": "fs-4", "label": "Large" }, { "value": "fs-3", "label": "Extra Large" } ],
      "default": "fs-5" },

    { "type": "text", "id": "button_text", "label": "Button Text", "default": "Shop Now" },
    { "type": "url", "id": "button_link", "label": "Button Link" },
    { "type": "select", "id": "button_style", "label": "Button Style",
      "options": [
        { "value": "btn-primary", "label": "Primary" }, { "value": "btn-secondary", "label": "Secondary" },
        { "value": "btn-outline-primary", "label": "Outline Primary" },
        { "value": "btn-outline-secondary", "label": "Outline Secondary" },
        { "value": "btn-outline-light", "label": "Outline Light" } ],
      "default": "btn-primary" },
    { "type": "select", "id": "button_size", "label": "Button Size",
      "options": [ { "value": "btn-sm", "label": "Small" }, { "value": "", "label": "Medium" }, { "value": "btn-lg", "label": "Large" } ],
      "default": "btn-lg" },

    { "type": "video", "id": "video_hosted", "label": "Hosted Video" },
    { "type": "text", "id": "video_url", "label": "Video URL", "info": "YouTube or Vimeo URL" },
    { "type": "image_picker", "id": "video_poster", "label": "Video Poster Image" },

    { "type": "range", "id": "overlay_opacity", "label": "Overlay Opacity", "min": 0, "max": 90, "step": 10, "default": 30, "unit": "%" },

    { "type": "select", "id": "text_color", "label": "Text Color",
      "options": [
        { "value": "text-white", "label": "White" }, { "value": "text-dark", "label": "Dark" },
        { "value": "text-primary", "label": "Primary" }, { "value": "text-secondary", "label": "Secondary" } ],
      "default": "text-white" },

    { "type": "range", "id": "section_height", "label": "Section Height", "min": 50, "max": 100, "step": 5, "default": 100, "unit": "vh" },
    { "type": "range", "id": "section_height_mobile", "label": "Section Height (Mobile)", "min": 40, "max": 100, "step": 5, "default": 70, "unit": "vh" },

    { "type": "select", "id": "bg_color", "label": "Background Color",
      "options": [ { "value": "", "label": "None" }, { "value": "bg-light", "label": "Light" }, { "value": "bg-dark", "label": "Dark" }, { "value": "bg-primary", "label": "Primary" } ],
      "default": "" },

    { "type": "range", "id": "pt", "label": "Padding Top", "min": 0, "max": 10, "step": 1, "default": 0 },
    { "type": "range", "id": "pb", "label": "Padding Bottom", "min": 0, "max": 10, "step": 1, "default": 0 },
    { "type": "range", "id": "mt", "label": "Margin Top", "min": 0, "max": 10, "step": 1, "default": 0 },
    { "type": "range", "id": "mb", "label": "Margin Bottom", "min": 0, "max": 10, "step": 1, "default": 0 }
  ],
  "presets": [{ "name": "Video Hero" }]
}
{% endschema %}